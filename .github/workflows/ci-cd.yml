name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  lint_python:
    name: Lint Python Files
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Run Flake8
      run: python -m flake8 .

  lint_js:
    name: Lint JavaScript Files
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install ESLint
      run: npm install eslint --global

    - name: Run ESLint
      run: npx eslint ./server/database --ext .js,.jsx || true

  build_and_test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: [lint_python, lint_js]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install Backend Dependencies
      run: |
        if [ -f server/requirements.txt ]; then pip install -r server/requirements.txt; fi

    - name: Run Python Tests
      run: |
        if [ -d server/tests ]; then pytest server/tests; else echo "No tests found"; fi

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Frontend Dependencies
      run: |
        cd server/frontend
        npm install

    - name: Run Frontend Build
      run: |
        cd server/frontend
        npm run build

  deploy:
    name: Deploy to DockerHub
    runs-on: ubuntu-latest
    needs: build_and_test

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t belvinar/senti_analyzer:latest .
        docker push belvinar/senti_analyzer:latest
